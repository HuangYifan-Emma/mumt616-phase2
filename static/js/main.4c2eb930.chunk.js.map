{"version":3,"sources":["SubmitDialog.js","TestFields.js","Group2FormPage.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["SubmitDialog","props","status","Dialog","open","onClose","Alert","severity","style","padding","AlertTitle","getRandomInt","min","max","Math","ceil","floor","random","wordArray","firstExcerptID","lastExcerptID","wordObjectArray","Array","from","length","_","i","map","excerptID","reduce","item","value","getExcerptWordObject","Object","assign","getAllExcerptsWordObjectRandomly","TabPanel","children","index","other","role","hidden","id","aria-labelledby","Box","sx","p","Typography","a11yProps","RatingRadio","React","useState","error","setError","FormControl","component","variant","FormLabel","color","label","RadioGroup","aria-label","name","row","onChange","event","setValue","target","FormControlLabel","control","Radio","labelPlacement","FormHelperText","getOneExcerptWordKeyArray","word","getAllExcerptsWordObject","initialValue","Group2Form","initialWordRatingFields","formFields","setFormFields","wordRatingFields","setwordRatingFields","dialogStatus","setDialogStatus","changeFormFields","prevState","changeWordRatingFields","getSection3PieceComponent","formValue","Stack","direction","justifyContent","alignItems","spacing","controls","src","section3","type","toString","flexGrow","bgcolor","display","Tabs","orientation","newValue","borderRight","borderColor","minWidth","maxWidth","marginRight","Tab","alignSelf","Divider","TextField","multiline","maxRows","fullWidth","required","helperText","Excerpt1","Excerpt2","Excerpt3","Excerpt4","Excerpt5","Excerpt6","Excerpt7","Excerpt8","Excerpt9","Excerpt10","Excerpt11","Excerpt12","Excerpt13","Excerpt14","Excerpt15","Button","endIcon","size","onClick","values","includes","jsonData","Name","Age","Years","MusicIdentity","ListenHabit","StringQuartetFamiliarity","ViolinFamiliarity","ViolaFamiliarity","CelloFamiliarity","ContemporaryFamiliarity","ExtendedTechFamiliarity","LachenmannFamiliarity","Feedback","forEach","e","j","question1","saveAs","Blob","JSON","stringify","Date","now","saveJson","Group2FormPage","shuffledSection3AudioArray","array","randomIndex","currentIndex","shuffle","Container","marginTop","marginBottom","globalTheme","createTheme","palette","primary","main","deepPurple","secondary","indigo","footer","width","textAlign","App","ThemeProvider","theme","Paper","className","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.4c2eb930.chunk.js","sourcesContent":["import * as React from 'react';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport Dialog from '@mui/material/Dialog';\n\nexport default function SubmitDialog(props) {\n  if (props.status === 'incomplete') {\n    return (\n      <Dialog open={props.open} onClose={props.onClose}>\n        <Alert severity=\"error\" style={{padding: '12px 18px'}}>\n          <AlertTitle>Error</AlertTitle>\n          Some fields are not completed, please check!\n        </Alert>\n      </Dialog>\n    )\n  } else if (props.status === 'complete') {\n    return (\n      <Dialog open={props.open} onClose={props.onClose}>\n        <Alert severity=\"success\">\n          <AlertTitle>Success</AlertTitle>\n          You finished the form!\n        </Alert>\n      </Dialog>\n    )\n  }\n}","const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); \n}\n\nconst wordArray = [\n  'Breathy',\n  'Bright',\n  'Clear/Pure',\n  'Creaky',\n  'Dark',\n  'Distorted',\n  'Erratic',\n  'Full',\n  'Harsh/Strident',\n  'Nasal',\n  'Noisy',\n  'Percussive',\n  'Quiet/Hushed',\n  'Round',\n  'Sharp/Crisp',\n  'Shrill',\n  'Sustained/Resonant',\n  'Thin',\n  'Woody'];\n\nconst getOneExcerptWordKeyArray = (wordArray, excerptID) => {\n  return wordArray.map((word) => `Excerpt${excerptID}_${word}`);\n}\n\nconst getAllExcerptsWordObjectRandomly = (\n  wordArray, firstExcerptID, lastExcerptID) => {\n  const getExcerptWordObject = (wordArray, excerptID) => wordArray.reduce(\n    (item, value) => ({\n      ...item,\n      [`Excerpt${excerptID}_${value}`]: getRandomInt(1, 6),\n    }), {});\n  const wordObjectArray = Array.from(\n    {length: lastExcerptID - firstExcerptID + 1}, (_, i) => i + 1)\n      .map((i) => getExcerptWordObject(wordArray, i));\n  return Object.assign({}, ...wordObjectArray);\n};\n\nconst testFormFields = {\n  'FamiliarityRatingExcerpt1': getRandomInt(1, 6),\n  'FamiliarityRatingExcerpt2': getRandomInt(1, 6),\n  'FamiliarityRatingExcerpt3': getRandomInt(1, 6),\n  'FamiliarityRatingExcerpt4': getRandomInt(1, 6),\n  'FamiliarityRatingExcerpt5': getRandomInt(1, 6),\n  'FamiliarityRatingExcerpt6': getRandomInt(1, 6),\n  'FamiliarityRatingExcerpt7': getRandomInt(1, 6),\n  'FamiliarityRatingExcerpt8': getRandomInt(1, 6),\n  'FamiliarityRatingExcerpt9': getRandomInt(1, 6),\n  'FamiliarityRatingExcerpt10': getRandomInt(1, 6),\n  'FamiliarityRatingExcerpt11': getRandomInt(1, 6),\n  'FamiliarityRatingExcerpt12': getRandomInt(1, 6),\n  'FamiliarityRatingExcerpt13': getRandomInt(1, 6),\n  'FamiliarityRatingExcerpt14': getRandomInt(1, 6),\n  'FamiliarityRatingExcerpt15': getRandomInt(1, 6),\n  'Name': 'Test Name',\n  'Age': getRandomInt(20, 30),\n  'Years': getRandomInt(1, 10),\n  'MusicIdentity': 'Test Identity',\n  'ListenHabit': 'Test Habit',\n  'StringQuartetFamiliarity': getRandomInt(1, 6),\n  'ViolinFamiliarity': getRandomInt(1, 6),\n  'ViolaFamiliarity': getRandomInt(1, 6),\n  'CelloFamiliarity': getRandomInt(1, 6),\n  'ContemporaryFamiliarity': getRandomInt(1, 6),\n  'ExtendedTechFamiliarity': getRandomInt(1, 6),\n  'LachenmannFamiliarity': getRandomInt(1, 6),\n  'Feedback': 'Test Feedback Text'\n};\n\nconst testWordRatingFields = getAllExcerptsWordObjectRandomly(wordArray, 1, 15);\n\nexport {testFormFields, testWordRatingFields}","import Container from '@mui/material/Container';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\nimport {useState} from 'react';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport {saveAs} from 'file-saver';\nimport SubmitDialog from './SubmitDialog';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport React from 'react';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n// FOR TEST ONLY!\nimport {testFormFields, testWordRatingFields} from './TestFields';\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\n\n\nfunction RatingRadio(props) {\n  const [error, setError] = React.useState(props.value === 0);\n\n  const handleRadioChange = (event) => {\n    props.setValue(props.name, event.target.value);\n    setError(false);\n  };\n\n  return (\n    <FormControl\n      component=\"fieldset\"\n      error={error}\n      variant=\"standard\">\n      <FormLabel color=\"success\">{props.label}</FormLabel>\n      <RadioGroup\n        aria-label={props.name}\n        name={props.name}\n        row\n        value={props.value}\n        onChange={handleRadioChange}>\n        {Array.from({length: 5}, (_, i) => i + 1).map((i) =>\n          <FormControlLabel key={i} value={i} control={<Radio/>}\n                            label={i} labelPlacement=\"bottom\"/>\n        )}\n      </RadioGroup>\n      <FormHelperText>{error ? 'Please select an option.' : ''}</FormHelperText>\n    </FormControl>\n  );\n}\n\nfunction shuffle(array) {\n  let currentIndex = array.length, randomIndex;\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    // Ad swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n  return array;\n}\n\nconst wordArray = [\n  'Breathy',\n  'Bright',\n  'Clear/Pure',\n  'Creaky',\n  'Dark',\n  'Distorted',\n  'Erratic',\n  'Full',\n  'Harsh/Strident',\n  'Nasal',\n  'Noisy',\n  'Percussive',\n  'Quiet/Hushed',\n  'Round',\n  'Sharp/Crisp',\n  'Shrill',\n  'Sustained/Resonant',\n  'Thin',\n  'Woody'];\n\nconst getOneExcerptWordKeyArray = (wordArray, excerptID) => {\n  return wordArray.map((word) => `Excerpt${excerptID}_${word}`);\n}\n\nconst getAllExcerptsWordObject = (\n  wordArray, firstExcerptID, lastExcerptID, initialValue) => {\n  const getExcerptWordObject = (wordArray, excerptID) => wordArray.reduce(\n    (item, value) => ({\n      ...item,\n      [`Excerpt${excerptID}_${value}`]: initialValue,\n    }), {});\n  const wordObjectArray = Array.from(\n    {length: lastExcerptID - firstExcerptID + 1}, (_, i) => i + 1)\n      .map((i) => getExcerptWordObject(wordArray, i));\n  return Object.assign({}, ...wordObjectArray);\n};\n\nfunction Group2Form(props) {\n  const testMode = false;\n\n  const initialFormFields = {\n    /*\n    'section1_piece1': '',\n    'section1_piece2': '',\n    'section1_piece3': '',\n    'section1_piece4': '',\n    'section2_piece1': '',\n    'section2_piece2': '',\n    'section2_piece3': '',\n    \n    'Excerpt1': '',\n    'Excerpt2': '',\n    'Excerpt3': '',\n    'Excerpt4': '',\n    'Excerpt5': '',\n    'Excerpt6': '',\n    'Excerpt7': '',\n    'Excerpt8': '',\n    'Excerpt9': '',\n    'Excerpt10': '',\n    'Excerpt11': '',\n    'Excerpt12': '',\n    'Excerpt13': '',\n    'Excerpt14': '',\n    'Excerpt15': '',\n*/\n    'FamiliarityRatingExcerpt1': 0,\n    'FamiliarityRatingExcerpt2': 0,\n    'FamiliarityRatingExcerpt3': 0,\n    'FamiliarityRatingExcerpt4': 0,\n    'FamiliarityRatingExcerpt5': 0,\n    'FamiliarityRatingExcerpt6': 0,\n    'FamiliarityRatingExcerpt7': 0,\n    'FamiliarityRatingExcerpt8': 0,\n    'FamiliarityRatingExcerpt9': 0,\n    'FamiliarityRatingExcerpt10': 0,\n    'FamiliarityRatingExcerpt11': 0,\n    'FamiliarityRatingExcerpt12': 0,\n    'FamiliarityRatingExcerpt13': 0,\n    'FamiliarityRatingExcerpt14': 0,\n    'FamiliarityRatingExcerpt15': 0,\n    'Name': '',\n    'Age': '',\n    'Years': '',\n    'MusicIdentity': '',\n    'ListenHabit': '',\n    'StringQuartetFamiliarity': 0,\n    'ViolinFamiliarity': 0,\n    'ViolaFamiliarity': 0,\n    'CelloFamiliarity': 0,\n    'ContemporaryFamiliarity': 0,\n    'ExtendedTechFamiliarity': 0,\n    'LachenmannFamiliarity': 0,\n    'Feedback': ''\n  };\n  const initialWordRatingFields = getAllExcerptsWordObject(wordArray, 1, 15, 0);\n\n  const [formFields, setFormFields] = useState(testMode ? testFormFields : initialFormFields);\n  const [wordRatingFields, setwordRatingFields] = useState(testMode ? testWordRatingFields : initialWordRatingFields);\n\n  const [dialogStatus, setDialogStatus] = useState({\n    'open': false,\n    'status': 'incomplete',\n  })\n\n  const handleDialogClose = () => {\n    setDialogStatus({\n      'open': false,\n      'status': dialogStatus.status\n    });\n  }\n\n// record answer\n  const changeFormFields = (event) => {\n    const {name, value} = event.target;\n    setFormFields((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const changeWordRatingFields = (name, value) => {\n    setwordRatingFields((prevState) => ({\n      ...prevState,\n      [name]: value\n    }));\n  }\n    \n  const saveJson = () => {\n    let jsonData = {};\n   /* props.section1.forEach((e, i) => {\n      jsonData[e] = formFields['section1_piece' + ((i + 1).toString())];\n    })\n    props.section2.forEach((e, i) => {\n      jsonData[e] = formFields['section2_piece' + ((i + 1).toString())];\n    })\n    */\n   jsonData['Name'] = formFields.Name;\n   jsonData['Age'] = formFields.Age;\n   jsonData['Musical Training Years'] = formFields.Years;\n   jsonData['Music Identity'] = formFields.MusicIdentity;\n   jsonData['Listen Habit'] = formFields.ListenHabit;\n   jsonData['StringQuartetFamiliarity'] = formFields.StringQuartetFamiliarity;\n   jsonData['ViolinFamiliarity'] = formFields.ViolinFamiliarity;\n   jsonData['ViolaFamiliarity'] = formFields.ViolaFamiliarity;\n   jsonData['CelloFamiliarity'] = formFields.CelloFamiliarity;\n   jsonData['ContemporaryFamiliarity'] = formFields.ContemporaryFamiliarity;\n   jsonData['ExtendedTechFamiliarity'] = formFields.ExtendedTechFamiliarity;\n   jsonData['LachenmannFamiliarity'] = formFields.LachenmannFamiliarity;\n   jsonData['Feedback'] = formFields.Feedback;\n\n    // TODO: add for wordRatingFields\n    // Object.assign(jsonData, wordRatingFields);\n    \n    props.section3.forEach((e, i) => {\n      jsonData[e] = formFields['Excerpt' + ((i+1).toString())];\n    })\n    props.section3.forEach((e, i) => {\n      jsonData['FamiliarityRatingExcerpt'+ e] = formFields['FamiliarityRatingExcerpt'+ ((i+1).toString())];\n    })\n\n    for (let i = 1; i < 16; i++){\n      for (let j = 0; j < 19; j++){\n        jsonData[props.section3[i-1] + '_' + wordArray[j]] = wordRatingFields[\"Excerpt\" + i +'_' + wordArray[j]];\n      }\n    }\n    jsonData['question1'] = formFields.question1;\n    \n    \n   \n    saveAs(new Blob([JSON.stringify(jsonData, null, 2)],\n      {type: 'application/json'}), 'form_result_' + Date.now().toString());\n  };\n\n  const onSubmit = () => {\n    // if (Object.values(formFields).includes('') ||\n    //     Object.values(wordRatingFields).includes(0)) {\n    if (Object.values(formFields).includes('')) {\n      setDialogStatus({\n        'open': true,\n        'status': 'incomplete'\n      });\n    } else {\n      setDialogStatus({\n        'open': true,\n        'status': 'complete'\n      });\n      saveJson();\n    }\n  }\n\n//old  first two section\n/*\n  const getSection1PieceComponent = (i, formValue) => {\n    return <div key={i.toString()}>\n      <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\"\n             spacing={2}>\n        <Stack direction={{xs: 'column', sm: 'row'}} justifyContent=\"center\"\n               spacing={2}>\n          <audio controls>\n            <source src={props.section1[i] + '_1.ogg'} type=\"audio/ogg\"/>\n            Your browser does not support the audio element.\n          </audio>\n          <audio controls>\n            <source src={props.section1[i] + '_2.ogg'} type=\"audio/ogg\"/>\n            Your browser does not support the audio element.\n          </audio>\n        </Stack>\n        <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\n          <Typography variant=\"body1\">{props.section1[i] + '_1'}</Typography>\n          <Typography variant=\"body1\">{props.section1[i] + '_2'}</Typography>\n        </Stack>\n        <TextField\n          label=\"Your description\"\n          multiline\n          maxRows={3}\n          fullWidth\n          error={!formValue}\n          required\n          helperText=\"Cannot be empty.\"\n          name={'section1_piece' + ((i + 1).toString())}\n          value={formValue}\n          onChange={changeFormFields}\n        />\n      </Stack>\n    </div>;\n  };\n\n  const getSection2PieceComponent = (i, formValue) => {\n    return <div key={i.toString()}>\n      <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\"\n             spacing={2}>\n        <audio controls>\n          <source src={props.section2[i] + '.ogg'} type=\"audio/ogg\"/>\n          Your browser does not support the audio element.\n        </audio>\n        <Typography variant=\"body1\">{props.section2[i]}</Typography>\n        <TextField\n          label=\"Your description\"\n          multiline\n          maxRows={3}\n          fullWidth\n          error={!formValue}\n          required\n          helperText=\"Cannot be empty.\"\n          name={'section2_piece' + ((i + 1).toString())}\n          value={formValue}\n          onChange={changeFormFields}\n        />\n      </Stack>\n    </div>;\n  };\n  */\n\n//Section define\n  const getSection3PieceComponent = (i, formValue) => {\n    return <div key={i.toString()}>\n      <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\"\n             spacing={2}>\n        <audio controls>\n          <source src={props.section3[i] + '.mp3'} type=\"audio/mp3\"/>\n          Your browser does not support the audio element.\n        </audio>\n        {/* display file name*/}\n        {/*<Typography variant=\"body1\">{props.section3[i]}</Typography>*/}\n        \n      </Stack>\n    </div>;\n  };\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  }\n\n  return (\n  <Box\n      sx={{ flexGrow: 1, bgcolor: 'background.paper', display: 'flex' }}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        sx={{ borderRight: 1, borderColor: 'divider', minWidth: 'min-content', maxWidth: 'min-content', marginRight: \"24px\"}}\n      >\n        <Tab label=\"Instruction\" {...a11yProps(0)} />\n        <Tab label=\"Participant Information\" {...a11yProps(1)} />\n        <Tab label=\"Familiarity Questions\" {...a11yProps(2)} />\n        <Tab label=\"Excerpt1\" {...a11yProps(3)} />\n        <Tab label=\"Excerpt2\" {...a11yProps(4)} />\n        <Tab label=\"Excerpt3\" {...a11yProps(5)} />\n        <Tab label=\"Excerpt4\" {...a11yProps(6)} />\n        <Tab label=\"Excerpt5\" {...a11yProps(7)} />\n        <Tab label=\"Excerpt6\" {...a11yProps(8)} />\n        <Tab label=\"Excerpt7\" {...a11yProps(9)} />\n        <Tab label=\"Excerpt8\" {...a11yProps(10)} />\n        <Tab label=\"Excerpt9\" {...a11yProps(11)} />\n        <Tab label=\"Excerpt10\" {...a11yProps(12)} />\n        <Tab label=\"Excerpt11\" {...a11yProps(13)} />\n        <Tab label=\"Excerpt12\" {...a11yProps(14)} />\n        <Tab label=\"Excerpt13\" {...a11yProps(15)} />\n        <Tab label=\"Excerpt14\" {...a11yProps(16)} />\n        <Tab label=\"Excerpt15\" {...a11yProps(17)} />\n        <Tab label=\"Post Experiment Interview\" {...a11yProps(18)} />\n\n      </Tabs>\n\n      \n      \n      <Stack\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={8}\n        sx={{display: \"contents\"}}>\n      <TabPanel value={value} index={0}>\n        <Stack\n          direction=\"column\"\n          justifyContent=\"flex-start\"\n          alignItems=\"center\"\n          spacing={4}>\n          <Typography variant=\"h3\" component=\"div\"\n                      style={{alignSelf: 'center'}}>\n            MUMT616 Experiment Phase 2\n          </Typography>\n          <Typography variant=\"h5\" component=\"div\">\n           Please read the following instruction carefully\n          </Typography>\n          <Typography variant=\"body1\" component=\"div\" >\n          Please conduct this survey at a computer with your best pair of headphones. The experiment should take 20 minutes.           </Typography>\n          <Typography variant=\"body1\" component=\"div\" >\n          <b>Once you have submitted the form, a text file of your answers should download automatically; please send the file to whoever referred you to the experiment.</b>\n          </Typography>\n          <Typography variant=\"body1\" component=\"div\" >\n          After providing some personal background information, you will be asked to listen to fifteen short excerpts for string quartet, and rate to what degree a list of descriptors apply to the timbre of the excerpt in question; insofar as it is possible, try to limit your application of these descriptors to just the use of timbre, and not other parameters (e.g. harmony, melody, rhythm, etc.).          </Typography>\n          <Typography variant=\"body1\" component=\"div\" >\n          The Oxford English Dictionary defines timbre as \"the character or quality of a musical sound or voice as distinct from its pitch and intensity.\" For example, timbre would be the quality of a sound that aids in distinguishing the sound of a clarinet from the sound of a trombone. Examples of timbral descriptors would include calling the flute clear, the trumpet brassy, or the bassoon woody.\n          </Typography>\n          {/*\n          <Typography variant=\"subtitle1\" component=\"div\">\n            Estimated time: x minutes\n          </Typography>\n          */}\n        </Stack>\n        <Divider/>\n\n        </TabPanel>\n\n        {/*\n        <Stack\n          direction=\"column\"\n          justifyContent=\"flex-start\"\n          alignItems=\"center\"\n          spacing={3}>\n          <Typography variant=\"h4\" component=\"div\"\n                      style={{alignSelf: 'center'}}>\n            Section 1\n          </Typography>\n          <Typography variant=\"subtitle1\" component=\"div\">\n            Listen to 4 pairs of string quartet, then write down\n            how would you describe the sound/timbre you heard?\n          </Typography>\n             { {getSection1PieceComponent(0, formFields.section1_piece1)}\n             {getSection1PieceComponent(1, formFields.section1_piece2)}\n             {getSection1PieceComponent(2, formFields.section1_piece3)}\n             {getSection1PieceComponent(3, formFields.section1_piece4)} }\n        </Stack>\n        <Divider>Section 1 Finished</Divider>\n        <Stack\n          direction=\"column\"\n          justifyContent=\"flex-start\"\n          alignItems=\"center\"\n          spacing={3}>\n          <Typography variant=\"h4\" component=\"div\"\n                      style={{alignSelf: 'center'}}>\n            Section 2\n          </Typography>\n          <Typography variant=\"subtitle1\" component=\"div\">\n            Listen to 3 Excerpts of string quartet with\n            extended techniques and describe each\n          </Typography>\n          { {getSection2PieceComponent(0, formFields.section2_piece1)}\n          {getSection2PieceComponent(1, formFields.section2_piece2)}\n          {getSection2PieceComponent(2, formFields.section2_piece3)} }\n        </Stack>\n        <Divider>Section 2 Finished</Divider>\n        */}\n\n        <Stack\n          direction=\"column\"\n          justifyContent=\"flex-start\"\n          alignItems=\"center\"\n          spacing={3}>\n          \n\n{/* writing quesitons*/}\n    <TabPanel value={value} index={1}>\n        <Stack\n        direction=\"column\"\n        justifyContent=\"flex-start\"\n        alignItems=\"stretch\"\n        spacing={8}>\n        <Typography variant=\"h4\" component=\"div\"\n                      style={{alignSelf: 'center'}}>\n            Participant information\n          </Typography>\n        <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\"\n             spacing={2}>\n             <Typography>\n             What is your full name? \n             </Typography>\n          <TextField\n          label=\"Frist name last name\"\n          multiline\n          maxRows={3}\n          fullWidth\n          required\n          name=\"Name\"\n          value={formFields['Name']}\n          helperText=\"Cannot be empty.\"\n          onChange={changeFormFields}\n          />\n        </Stack>\n\n        <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\"\n             spacing={2}>\n             <Typography>\n             What is your age? \n             </Typography>\n          <TextField\n          label=\"Type number\"\n          multiline\n          maxRows={3}\n          fullWidth\n          required\n          name=\"Age\"\n          value={formFields['Age']}\n          helperText=\"Cannot be empty.\"\n          onChange={changeFormFields}\n          />\n        </Stack>\n\n        <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\"\n             spacing={2}>\n             <Typography>\n             How many years of musical training have you had? \n             </Typography>\n          <TextField\n          label=\"Type number\"\n          multiline\n          maxRows={3}\n          fullWidth\n          required\n          name=\"Years\"\n          value={formFields['Years']}\n          helperText=\"Cannot be empty.\"\n          onChange={changeFormFields}\n          />\n        </Stack>\n\n        <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\"\n             spacing={2}>\n             <Typography>\n             If you are a musician, what is your primary occupation(s) as a musician (composer, conductor, musicologist, performer, theorist, etc.)? If you are a performer, include your primary instrument(s) or voice type. \n             </Typography>\n          <TextField\n          multiline\n          maxRows={3}\n          fullWidth\n          required\n          name=\"MusicIdentity\"\n          value={formFields['MusicIdentity']}\n          helperText=\"Cannot be empty.\"\n          onChange={changeFormFields}\n          />\n        </Stack>\n\n        <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\"\n             spacing={2}>\n             <Typography>\n             How would you describe your musical listening habits? What type(s) of music do you listen to regularly and are most familiar with? \n             </Typography>\n          <TextField\n          multiline\n          maxRows={3}\n          fullWidth\n          required\n          name=\"ListenHabit\"\n          value={formFields['ListenHabit']}\n          helperText=\"Cannot be empty.\"\n          onChange={changeFormFields}\n          />\n        </Stack>\n        </Stack>\n        <Divider/>\n        </TabPanel>\n\n        \n\n{/* Familiarity with the string quartet */}\n<TabPanel value={value} index={2}>\n        <Stack direction=\"column\" justifyContent=\"center\" \n             spacing={2}>\n          <Typography variant=\"h4\" component=\"div\"\n                      style={{alignSelf: 'center'}}>\n            Familiarity with the string quartet and its instruments\n          </Typography>\n          <Typography>\n             <b>(1 is not familiar at all, 5 is very familiar)</b>\n          </Typography>\n      \n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with the sound of the string quartet?\n            </FormLabel>\n            <RadioGroup \n              row \n              name=\"StringQuartetFamiliarity\"\n              value={formFields['StringQuartetFamiliarity']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" /> \n              </RadioGroup>\n          </FormControl>\n\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with the sound of the violin?\n            </FormLabel>\n            <RadioGroup \n              row \n              name=\"ViolinFamiliarity\"\n              value={formFields['ViolinFamiliarity']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />\n              </RadioGroup>\n          </FormControl>\n\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with the sound of the viola?\n            </FormLabel>\n            <RadioGroup \n              row \n              name=\"ViolaFamiliarity\"\n              value={formFields['ViolaFamiliarity']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />\n              </RadioGroup>\n          </FormControl>\n\n          \n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with the sound of the cello?\n            </FormLabel>\n            <RadioGroup \n              row \n              name=\"CelloFamiliarity\"\n              value={formFields['CelloFamiliarity']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />\n              </RadioGroup>\n          </FormControl>\n\n          \n        </Stack>\n        <Divider/>\n        </TabPanel>\n\n        <TabPanel value={value} index={3}>\n        <Typography variant=\"h4\" component=\"div\"\n                      style={{alignSelf: 'center'}}>\n            Listen to 15 Excerpts of music and rate\n            </Typography>\n\n            \n{/*Excerpt1*/}\n          <Stack direction=\"column\" justifyContent=\"center\" \n             spacing={2}>\n          <Divider>Excerpt 1</Divider>\n          {getSection3PieceComponent(0, formFields.Excerpt1)}\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            <b>Rate how well each of the descriptions listed describes the music excerpts\n            (A rating of 1 indicates that the word or group of words is not at all appropriate to describe the music, while a rating of 5 indicates that at least one of the presented words is very appropriate.)</b>\n          </FormLabel>\n          {getOneExcerptWordKeyArray(wordArray, 1).map((item, index) => \n            <Typography>\n            \n              <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n                <RatingRadio name={item}\n                           value={wordRatingFields[item]}\n                           setValue={changeWordRatingFields}\n                           label={wordArray[index]}/>\n              </Stack>\n            \n            </Typography>)}\n          \n          </FormControl>\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with Excerpt 1?\n          </FormLabel>\n          <Typography>\n             (1 is not familiar at all, 5 is very familiar)\n          </Typography>\n            <RadioGroup \n              row  \n              name=\"FamiliarityRatingExcerpt1\"\n              value={formFields['FamiliarityRatingExcerpt1']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />    \n            </RadioGroup>\n          </FormControl>\n          </Stack>\n          </Stack>\n          </TabPanel>\n\n{/*Excerpt2*/}\n<TabPanel value={value} index={4}>\n          <Stack>\n          <Divider>Excerpt 2</Divider>\n          {getSection3PieceComponent(1, formFields.Excerpt2)}\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            Rate how well each of the descriptions listed describes the music excerpts\n            (A rating of 1 indicates that the word or group of words is not at all appropriate to describe the music, while a rating of 5 indicates that at least one of the presented words is very appropriate.)\n          </FormLabel>\n          {getOneExcerptWordKeyArray(wordArray, 2).map((item, index) => \n            <Typography>\n            \n              <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n                <RatingRadio name={item}\n                           value={wordRatingFields[item]}\n                           setValue={changeWordRatingFields}\n                           label={wordArray[index]}/>\n              </Stack>\n            \n            </Typography>)}\n          \n          </FormControl>\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with Excerpt 2?\n          </FormLabel>\n          <Typography>\n             (1 is not familiar at all, 5 is very familiar)\n          </Typography>\n            <RadioGroup \n              row  \n              name=\"FamiliarityRatingExcerpt2\"\n              value={formFields['FamiliarityRatingExcerpt2']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />    \n            </RadioGroup>\n          </FormControl>\n          </Stack>\n          </Stack>\n          </TabPanel>\n\n{/*Excerpt3*/}\n<TabPanel value={value} index={5}>\n          <Stack>\n          <Divider>Excerpt 3</Divider>\n          {getSection3PieceComponent(2, formFields.Excerpt3)}\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            A rating of 1 indicates that the word or group of words is not at all appropriate to describe the music, while a rating of 5 indicates that at least one of the presented words is very appropriate.\n          </FormLabel>\n          {getOneExcerptWordKeyArray(wordArray, 3).map((item, index) => \n            <Typography>\n            \n              <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n                <RatingRadio name={item}\n                           value={wordRatingFields[item]}\n                           setValue={changeWordRatingFields}\n                           label={wordArray[index]}/>\n              </Stack>\n            \n            </Typography>)}\n          \n          </FormControl>\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with Excerpt 3?\n          </FormLabel>\n          <Typography>\n             (1 is not familiar at all, 5 is very familiar)\n          </Typography>\n            <RadioGroup \n              row  \n              name=\"FamiliarityRatingExcerpt3\"\n              value={formFields['FamiliarityRatingExcerpt3']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />    \n            </RadioGroup>\n          </FormControl>\n          </Stack>\n          </Stack>\n          </TabPanel>\n\n{/*Excerpt4*/}\n<TabPanel value={value} index={6}>\n          <Stack>\n          <Divider>Excerpt 4</Divider>\n          {getSection3PieceComponent(3, formFields.Excerpt4)}\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            A rating of 1 indicates that the word or group of words is not at all appropriate to describe the music, while a rating of 5 indicates that at least one of the presented words is very appropriate.\n          </FormLabel>\n          {getOneExcerptWordKeyArray(wordArray, 4).map((item, index) => \n            <Typography>\n            \n              <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n                <RatingRadio name={item}\n                           value={wordRatingFields[item]}\n                           setValue={changeWordRatingFields}\n                           label={wordArray[index]}/>\n              </Stack>\n            \n            </Typography>)}\n          \n          </FormControl>\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with Excerpt 4?\n          </FormLabel>\n          <Typography>\n             (1 is not familiar at all, 5 is very familiar)\n          </Typography>\n            <RadioGroup \n              row  \n              name=\"FamiliarityRatingExcerpt4\"\n              value={formFields['FamiliarityRatingExcerpt4']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />    \n            </RadioGroup>\n          </FormControl>\n          </Stack>\n          </Stack>\n          </TabPanel>\n\n{/*Excerpt5*/}\n<TabPanel value={value} index={7}>\n          <Stack>\n          <Divider>Excerpt 5</Divider>\n          {getSection3PieceComponent(4, formFields.Excerpt5)}\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            A rating of 1 indicates that the word or group of words is not at all appropriate to describe the music, while a rating of 5 indicates that at least one of the presented words is very appropriate.\n          </FormLabel>\n          {getOneExcerptWordKeyArray(wordArray, 5).map((item, index) => \n            <Typography>\n            \n              <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n                <RatingRadio name={item}\n                           value={wordRatingFields[item]}\n                           setValue={changeWordRatingFields}\n                           label={wordArray[index]}/>\n              </Stack>\n            \n            </Typography>)}\n          \n          </FormControl>\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with Excerpt 5?\n          </FormLabel>\n          <Typography>\n             (1 is not familiar at all, 5 is very familiar)\n          </Typography>\n            <RadioGroup \n              row  \n              name=\"FamiliarityRatingExcerpt5\"\n              value={formFields['FamiliarityRatingExcerpt5']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />    \n            </RadioGroup>\n          </FormControl>\n          </Stack>\n          </Stack>\n          </TabPanel>\n\n{/*Excerpt6*/}\n<TabPanel value={value} index={8}>\n          <Stack>\n          <Divider>Excerpt 6</Divider>\n          {getSection3PieceComponent(5, formFields.Excerpt6)}\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            A rating of 1 indicates that the word or group of words is not at all appropriate to describe the music, while a rating of 5 indicates that at least one of the presented words is very appropriate.\n          </FormLabel>\n          {getOneExcerptWordKeyArray(wordArray, 6).map((item, index) => \n            <Typography>\n            \n              <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n                <RatingRadio name={item}\n                           value={wordRatingFields[item]}\n                           setValue={changeWordRatingFields}\n                           label={wordArray[index]}/>\n              </Stack>\n            \n            </Typography>)}\n          \n          </FormControl>\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with Excerpt 6?\n          </FormLabel>\n          <Typography>\n             (1 is not familiar at all, 5 is very familiar)\n          </Typography>\n            <RadioGroup \n              row  \n              name=\"FamiliarityRatingExcerpt6\"\n              value={formFields['FamiliarityRatingExcerpt6']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />    \n            </RadioGroup>\n          </FormControl>\n          </Stack>\n          </Stack>\n          </TabPanel>\n\n{/*Excerpt7*/}\n<TabPanel value={value} index={9}>\n          <Stack>\n          <Divider>Excerpt 7</Divider>\n          {getSection3PieceComponent(6, formFields.Excerpt7)}\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            A rating of 1 indicates that the word or group of words is not at all appropriate to describe the music, while a rating of 5 indicates that at least one of the presented words is very appropriate.\n          </FormLabel>\n          {getOneExcerptWordKeyArray(wordArray, 7).map((item, index) => \n            <Typography>\n            \n              <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n                <RatingRadio name={item}\n                           value={wordRatingFields[item]}\n                           setValue={changeWordRatingFields}\n                           label={wordArray[index]}/>\n              </Stack>\n            \n            </Typography>)}\n          \n          </FormControl>\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with Excerpt 7?\n          </FormLabel>\n          <Typography>\n             (1 is not familiar at all, 5 is very familiar)\n          </Typography>\n            <RadioGroup \n              row  \n              name=\"FamiliarityRatingExcerpt7\"\n              value={formFields['FamiliarityRatingExcerpt7']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />    \n            </RadioGroup>\n          </FormControl>\n          </Stack>\n          </Stack>\n          </TabPanel>\n\n{/*Excerpt8*/}\n<TabPanel value={value} index={10}>\n          <Stack>\n          <Divider>Excerpt 8</Divider>\n          {getSection3PieceComponent(7, formFields.Excerpt8)}\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            A rating of 1 indicates that the word or group of words is not at all appropriate to describe the music, while a rating of 5 indicates that at least one of the presented words is very appropriate.\n          </FormLabel>\n          {getOneExcerptWordKeyArray(wordArray, 8).map((item, index) => \n            <Typography>\n            \n              <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n                <RatingRadio name={item}\n                           value={wordRatingFields[item]}\n                           setValue={changeWordRatingFields}\n                           label={wordArray[index]}/>\n              </Stack>\n            \n            </Typography>)}\n          \n          </FormControl>\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with Excerpt 8?\n          </FormLabel>\n          <Typography>\n             (1 is not familiar at all, 5 is very familiar)\n          </Typography>\n            <RadioGroup \n              row  \n              name=\"FamiliarityRatingExcerpt8\"\n              value={formFields['FamiliarityRatingExcerpt8']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />    \n            </RadioGroup>\n          </FormControl>\n          </Stack>\n          </Stack>\n          </TabPanel>\n\n{/*Excerpt9*/}\n<TabPanel value={value} index={11}>\n          <Stack>\n          <Divider>Excerpt 9</Divider>\n          {getSection3PieceComponent(8, formFields.Excerpt9)}\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            A rating of 1 indicates that the word or group of words is not at all appropriate to describe the music, while a rating of 5 indicates that at least one of the presented words is very appropriate.\n          </FormLabel>\n          {getOneExcerptWordKeyArray(wordArray, 9).map((item, index) => \n            <Typography>\n            \n              <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n                <RatingRadio name={item}\n                           value={wordRatingFields[item]}\n                           setValue={changeWordRatingFields}\n                           label={wordArray[index]}/>\n              </Stack>\n            \n            </Typography>)}\n          \n          </FormControl>\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with Excerpt 9?\n          </FormLabel>\n          <Typography>\n             (1 is not familiar at all, 5 is very familiar)\n          </Typography>\n            <RadioGroup \n              row  \n              name=\"FamiliarityRatingExcerpt9\"\n              value={formFields['FamiliarityRatingExcerpt9']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />    \n            </RadioGroup>\n          </FormControl>\n          </Stack>\n          </Stack> \n</TabPanel>\n\n{/*Excerpt10*/}\n<TabPanel value={value} index={12}>\n          <Stack>\n          <Divider>Excerpt 10</Divider>\n          {getSection3PieceComponent(9, formFields.Excerpt10)}\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            A rating of 1 indicates that the word or group of words is not at all appropriate to describe the music, while a rating of 5 indicates that at least one of the presented words is very appropriate.\n          </FormLabel>\n          {getOneExcerptWordKeyArray(wordArray, 10).map((item, index) => \n            <Typography>\n            \n              <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n                <RatingRadio name={item}\n                           value={wordRatingFields[item]}\n                           setValue={changeWordRatingFields}\n                           label={wordArray[index]}/>\n              </Stack>\n            \n            </Typography>)}\n          \n          </FormControl>\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with Excerpt 10?\n          </FormLabel>\n          <Typography>\n             (1 is not familiar at all, 5 is very familiar)\n          </Typography>\n            <RadioGroup \n              row  \n              name=\"FamiliarityRatingExcerpt10\"\n              value={formFields['FamiliarityRatingExcerpt10']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />    \n            </RadioGroup>\n          </FormControl>\n          </Stack>\n          </Stack>\n          </TabPanel>\n\n{/*Excerpt11*/}\n<TabPanel value={value} index={13}>\n          <Stack>\n          <Divider>Excerpt 11</Divider>\n          {getSection3PieceComponent(10, formFields.Excerpt11)}\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            A rating of 1 indicates that the word or group of words is not at all appropriate to describe the music, while a rating of 5 indicates that at least one of the presented words is very appropriate.\n          </FormLabel>\n          {getOneExcerptWordKeyArray(wordArray, 11).map((item, index) => \n            <Typography>\n            \n              <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n                <RatingRadio name={item}\n                           value={wordRatingFields[item]}\n                           setValue={changeWordRatingFields}\n                           label={wordArray[index]}/>\n              </Stack>\n            \n            </Typography>)}\n          \n          </FormControl>\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with Excerpt 11?\n          </FormLabel>\n          <Typography>\n             (1 is not familiar at all, 5 is very familiar)\n          </Typography>\n            <RadioGroup \n              row  \n              name=\"FamiliarityRatingExcerpt11\"\n              value={formFields['FamiliarityRatingExcerpt11']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />    \n            </RadioGroup>\n          </FormControl>\n          </Stack>\n          </Stack>\n          </TabPanel>\n\n{/*Excerpt12*/}\n<TabPanel value={value} index={14}>\n          <Stack>\n          <Divider>Excerpt 12</Divider>\n          {getSection3PieceComponent(11, formFields.Excerpt12)}\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            A rating of 1 indicates that the word or group of words is not at all appropriate to describe the music, while a rating of 5 indicates that at least one of the presented words is very appropriate.\n          </FormLabel>\n          {getOneExcerptWordKeyArray(wordArray, 12).map((item, index) => \n            <Typography>\n            \n              <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n                <RatingRadio name={item}\n                           value={wordRatingFields[item]}\n                           setValue={changeWordRatingFields}\n                           label={wordArray[index]}/>\n              </Stack>\n            \n            </Typography>)}\n          \n          </FormControl>\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with Excerpt 12?\n            value={formFields['FamiliarityRatingExcerpt12']}\n          </FormLabel>\n          <Typography>\n             (1 is not familiar at all, 5 is very familiar)\n          </Typography>\n            <RadioGroup \n              row  \n              name=\"FamiliarityRatingExcerpt12\"\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />    \n            </RadioGroup>\n          </FormControl>\n          </Stack>\n          </Stack>\n</TabPanel>\n\n{/*Excerpt13*/}\n\n<TabPanel value={value} index={15}>\n          <Stack>\n          <Divider>Excerpt 13</Divider>\n          {getSection3PieceComponent(12, formFields.Excerpt13)}\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            A rating of 1 indicates that the word or group of words is not at all appropriate to describe the music, while a rating of 5 indicates that at least one of the presented words is very appropriate.\n          </FormLabel>\n          {getOneExcerptWordKeyArray(wordArray, 13).map((item, index) => \n            <Typography>\n            \n              <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n                <RatingRadio name={item}\n                           value={wordRatingFields[item]}\n                           setValue={changeWordRatingFields}\n                           label={wordArray[index]}/>\n              </Stack>\n            \n            </Typography>)}\n          \n          </FormControl>\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with Excerpt 13?\n          </FormLabel>\n          <Typography>\n             (1 is not familiar at all, 5 is very familiar)\n          </Typography>\n            <RadioGroup \n              row  \n              name=\"FamiliarityRatingExcerpt13\"\n              value={formFields['FamiliarityRatingExcerpt13']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />    \n            </RadioGroup>\n          </FormControl>\n          </Stack>\n          </Stack>\n</TabPanel>\n\n{/*Excerpt14*/}\n\n<TabPanel value={value} index={16}>\n          <Stack>\n          <Divider>Excerpt 14</Divider>\n          {getSection3PieceComponent(13, formFields.Excerpt14)}\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            A rating of 1 indicates that the word or group of words is not at all appropriate to describe the music, while a rating of 5 indicates that at least one of the presented words is very appropriate.\n          </FormLabel>\n          {getOneExcerptWordKeyArray(wordArray, 14).map((item, index) => \n            <Typography>\n            \n              <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n                <RatingRadio name={item}\n                           value={wordRatingFields[item]}\n                           setValue={changeWordRatingFields}\n                           label={wordArray[index]}/>\n              </Stack>\n            \n            </Typography>)}\n          \n          </FormControl>\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with Excerpt 14?\n          </FormLabel>\n          <Typography>\n             (1 is not familiar at all, 5 is very familiar)\n          </Typography>\n            <RadioGroup \n              row  \n              name=\"FamiliarityRatingExcerpt14\"\n              value={formFields['FamiliarityRatingExcerpt14']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />    \n            </RadioGroup>\n          </FormControl>\n          </Stack>\n          </Stack>\n</TabPanel>\n\n{/*Excerpt15*/}\n<TabPanel value={value} index={17}>\n          <Stack>\n          <Divider>Excerpt 15</Divider>\n          {getSection3PieceComponent(14, formFields.Excerpt15)}\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            A rating of 1 indicates that the word or group of words is not at all appropriate to describe the music, while a rating of 5 indicates that at least one of the presented words is very appropriate.\n          </FormLabel>\n          {getOneExcerptWordKeyArray(wordArray, 15).map((item, index) => \n            <Typography>\n            \n              <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n                <RatingRadio name={item}\n                           value={wordRatingFields[item]}\n                           setValue={changeWordRatingFields}\n                           label={wordArray[index]}/>\n              </Stack>\n            \n            </Typography>)}\n          \n          </FormControl>\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with Excerpt 15?\n          </FormLabel>\n          <Typography>\n             (1 is not familiar at all, 5 is very familiar)\n          </Typography>\n            <RadioGroup \n              row  \n              name=\"FamiliarityRatingExcerpt15\"\n              value={formFields['FamiliarityRatingExcerpt15']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />    \n            </RadioGroup>\n          </FormControl>\n          </Stack>\n          \n          </Stack>\n          \n          <Divider/>\n          </TabPanel>\n\n       {/*}   \n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            Question\n            </FormLabel>\n            <RadioGroup \n              row \n              aria-label=\"Question\" \n              name=\"question1\"\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />\n              \n              \n              </RadioGroup>\n            </FormControl>\n      */}\n\n        {/* Familiarity with the music */}\n        <TabPanel value={value} index={18}>\n        <Stack direction=\"column\" justifyContent=\"center\" \n             spacing={2}>\n          <Typography variant=\"h4\" component=\"div\"\n                      style={{alignSelf: 'center'}}>\n            Post-Experiment Questionnaire\n          </Typography>\n      \n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with contemporary classical music?\n            </FormLabel>\n            <RadioGroup \n              row \n              name=\"ContemporaryFamiliarity\"\n              value={formFields['ContemporaryFamiliarity']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" /> \n              </RadioGroup>\n          </FormControl>\n\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with extended instrumental techniques?\n            </FormLabel>\n            <RadioGroup \n              row \n              name=\"ExtendedTechFamiliarity\"\n              value={formFields['ExtendedTechFamiliarity']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />\n              </RadioGroup>\n          </FormControl>\n\n          \n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n            How familiar are you with the music of Helmut Lachenmann?\n            </FormLabel>\n            <RadioGroup \n              row \n              name=\"LachenmannFamiliarity\"\n              value={formFields['LachenmannFamiliarity']}\n              onChange={changeFormFields}>\n              <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n              <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n              <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n              <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n              <FormControlLabel value={5} control={<Radio />} label=\"5\" />\n              </RadioGroup>\n          </FormControl>\n\n   \n        </Stack>\n\n        <Stack direction=\"column\" justifyContent=\"center\" \n             spacing={2}>\n        <Typography variant=\"h4\" component=\"div\"\n                      style={{alignSelf: 'center'}}>\n            Thanks for Participating!!!\n          </Typography>\n\n          <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\"\n             spacing={2}>\n             <Typography>\n             If you have any comments, questions or concerns, feel free to share them below!\n             </Typography>\n          <TextField\n          multiline\n          maxRows={3}\n          fullWidth\n          required\n          name=\"Feedback\"\n          value={formFields['Feedback']}\n          onChange={changeFormFields}\n          />\n          <Typography>\n          <b>Once you have submitted the form, a text file(.json) of your answers should download automatically; please send the file to whoever referred you to the experiment.</b>\n          </Typography>\n        </Stack>\n        <Divider>Experiment Finished</Divider>\n  \n        <Button variant=\"contained\" endIcon={<SendIcon/>} size=\"large\" color=\"secondary\"\n          onClick={onSubmit}>\n          Submit\n        </Button>\n        <SubmitDialog open={dialogStatus.open} status={dialogStatus.status} onClose={handleDialogClose}/>\n        </Stack>\n        </TabPanel>\n        </Stack>\n       \n      </Stack>\n        \n      </Box>\n  );\n  }\n\nexport default function Group2FormPage() {\n  // const section1AudioArray = [\n  //   'section1_pair1',\n  //   'section1_pair2',\n  //   'section1_pair3',\n  //   'section1_pair4'];\n  // const section2AudioArray = [\n  //   'section2_piece1',\n  //   'section2_piece2',\n  //   'section2_piece3'];\n   \n  const section3AudioArray = [\n    'Excerpt1',\n    'Excerpt2',\n    'Excerpt3',\n    'Excerpt4',\n    'Excerpt5',\n    'Excerpt6',\n    'Excerpt7',\n    'Excerpt8',\n    'Excerpt9',\n    'Excerpt10',\n    'Excerpt11',\n    'Excerpt12',\n    'Excerpt13',\n    'Excerpt14',\n    'Excerpt15'];\n\n  /*\n  let shuffledSection1AudioArray = shuffle(section1AudioArray);\n  let shuffledSection2AudioArray = shuffle(section2AudioArray);\n  */\n  let shuffledSection3AudioArray = shuffle(section3AudioArray);\n\n  return (\n    <Container maxWidth=\"lg\" style={{marginTop: '36px', marginBottom: '36px'}}>\n      <Group2Form\n      //section1={shuffledSection1AudioArray}\n      //section2={shuffledSection2AudioArray}\n        section3={shuffledSection3AudioArray}/>\n    </Container>\n  );\n}","import React from 'react';\nimport { deepPurple, indigo } from '@mui/material/colors';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Group2FormPage from './Group2FormPage';\nimport { Paper, Typography } from '@mui/material';\n\nlet globalTheme = createTheme({\n  palette: {\n    primary: {\n      main: deepPurple[100],\n    },\n    secondary: {\n      main: indigo[100],\n    },\n  },\n  footer: {\n    padding: \"1.5em\",\n    marginTop: \"auto\",\n    width: \"100%\",\n    textAlign: \"center\"\n  }\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={globalTheme}>\n      <Paper>\n        <Group2FormPage />\n        <footer id=\"footer\" className=\"footer\">\n          <Typography variant=\"h6\" color=\"secondary\" style={{ textAlign: \"center\" }}>\n          𝄆 ES𝄞YF 𝄇\n          </Typography>\n        </footer>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}